library(knitr)
library(ggplot2)
library(gsheet)
library(ggthemes)
library(tidyverse)
library(drc)
library(kableExtra)
library(DT)
library(leaflet)
install.packages("leaflet")
library(knitr)
library(ggplot2)
library(gsheet)
library(ggthemes)
library(tidyverse)
library(drc)
library(kableExtra)
library(DT)
library(leaflet)
## plot do viveiro
leaflet() |>
addTiles() |>
setView(lng = -42.8497 , lat = -20.7453, zoom = 16)
GU <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1zEsVt_nnmydEUBJjkyMrOLHEu6pXeM-SmwTXyEoNbmg/edit?gid=0#gid=0")
GU <- GU %>%
mutate(REPETICAO = as.factor(REPETICAO))
head(GU)
GU2 <- GU %>%
group_by(DOSE) %>%
summarise(mean_germ = mean(TAXA_DE_GERMINAÇÃO))%>%
dplyr::mutate(inib = ((70.90-mean_germ)/70.90)*100) %>%
round(digits = 2)
head(GU2)
EC <- drm(mean_germ ~ DOSE,
data = GU2,
fct = W1.4())
summary(EC)
EC
AIC(EC)
ED(EC, 50, interval = "delta")
colnames(GU2) = c('Dose', "Germinação Média (%)", "Inibição da Germinação (%)")
kable(GU2,
align = "ccc")
plot(EC,
xlab = Dose~(ml~L^-1),
ylab = "Germinação média (%)",
xt = c("0", "2.50", "3.75", "5", "7.5", "10"),
ylim = c(0,100),
pch = 19,
col = "grey20")
library(gsheet)
library(tidyverse)
library(DT)
library(patchwork)
library(performance)
library(emmeans)
library(DHARMa)
library(multcomp)
library(multcompView)
library(epifitter)
library(knitr)
library(kableExtra)
library(ggplot2)
PTD <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1zEsVt_nnmydEUBJjkyMrOLHEu6pXeM-SmwTXyEoNbmg/edit?gid=1680501439#gid=1680501439")
PTD <- PTD |>
mutate(SEVERIDADE = as.numeric(str_replace(SEVERIDADE, ",", ".")) / 100)
## Mudando os dados de percentagem para proporção
PTD = PTD |>
mutate(SEVERIDADE = SEVERIDADE/100)
## Mudando o nome dos tratamentos
TRATAMENTO <- c("Control", "3 x F", "3 x IRStimulus","F, IRStimulus, IRStimulus", "IRStimulus, F, IRStimulus", "IRStimulus+F, F,F"  )
names(TRATAMENTO) <- c("1", "2", "3", "4", "5", "6") # Mapeando números para nomes de tratamentos
# Atualizar a variável tratamento no data frame
PTD$TRATAMENTO <- factor(PTD$TRATAMENTO, levels = names(TRATAMENTO), labels = TRATAMENTO)
PTD_2 <- PTD %>%
group_by(REPETIÇÃO, TRATAMENTO, DAE) %>%
summarise(sev_mean = mean(SEVERIDADE)) %>%
mutate(REPETIÇÃO = as.factor(REPETIÇÃO),
TRATAMENTO = as.factor(TRATAMENTO),
DAE = as.numeric (DAE))
head(PTD_2)
PTD_3 <- PTD %>%
dplyr::group_by (REPETIÇÃO, TRATAMENTO, BLOCO) %>%
summarise(audpc = AUDPC(DAE, SEVERIDADE)) %>%
dplyr::mutate(REPETIÇÃO = as.factor(REPETIÇÃO),
TRATAMENTO = as.factor(TRATAMENTO),
BLOCO = as.factor(BLOCO))
head(PTD_3)
library(ggplot2)
# Define o tema padrão como theme_minimal() com tamanho de fonte 10
theme_set(theme_minimal(base_size = 10))
# Gráfico com personalizações
PTD_3 %>%
ggplot(aes(TRATAMENTO, audpc)) +
geom_jitter(
width = 0.3,
alpha = 0.6,
colour = "darkred",
size = 2
) +
stat_summary(
fun.data = "mean_cl_boot",
color = "black"
) +
labs(
x = "Tratamentos",
y = "AACPD"
) +
theme(
# Ajustes específicos dos eixos
axis.title.y = element_text(vjust = +3),
axis.title.x = element_text(vjust = -1),
axis.text.x = element_text(angle = 45, hjust = 1),
# Melhorias visuais adicionais (opcional)
panel.grid.major.x = element_blank(),  # Remove linhas de grade verticais
strip.background = element_rect(fill = "gray90"),  # Fundo dos facets
strip.text = element_text(face = "bold")  # Texto dos facets em negrito
) +
facet_wrap(
~ REPETIÇÃO,
labeller = labeller(
REPETIÇÃO = c(
"1" = "Experimento 1",
"2" = "Experimento 2"
)
)
)
PTD_AUDPC <- lm(audpc ~ TRATAMENTO*REPETIÇÃO + BLOCO,
data = PTD_3)
anova(PTD_AUDPC)
PTD_E1 <- PTD_3 %>%
filter(REPETIÇÃO == 1)
PTD_AUDPC_1 <- lm(audpc ~ TRATAMENTO + BLOCO,
data = PTD_E1)
check_normality(PTD_AUDPC_1)
check_heteroscedasticity(PTD_AUDPC_1)
PTD_AUDPC_1_log <- lm(log(audpc) ~ TRATAMENTO + BLOCO,
data = PTD_E1)
check_normality(PTD_AUDPC_1_log)
check_heteroscedasticity(PTD_AUDPC_1_log)
plot(simulateResiduals(PTD_AUDPC_1_log))
anova(PTD_AUDPC_1_log)
medias_PTD_AUDPC_1 <- emmeans(PTD_AUDPC_1_log, ~ TRATAMENTO, type = "response")
medias_PTD_AUDPC_1
cld(medias_PTD_AUDPC_1,
Letters = LETTERS)
CV_AUDPC_1 <- agricolae::cv.model(PTD_AUDPC_1) %>%
round(digits = 2)
CV_AUDPC_1
PTD_E2 <- PTD_3 %>%
filter(REPETIÇÃO == 2)
PTD_AUDPC_2 <- lm(audpc ~ TRATAMENTO + BLOCO,
data = PTD_E2)
check_normality(PTD_AUDPC_2)
check_heteroscedasticity(PTD_AUDPC_2)
plot(simulateResiduals(PTD_AUDPC_2))
anova(PTD_AUDPC_2)
medias_PTD_AUDPC_2 <- emmeans(PTD_AUDPC_2, ~ TRATAMENTO, type = "response")
medias_PTD_AUDPC_2
cld(medias_PTD_AUDPC_2,
Letters = LETTERS)
CV_AUDPC_2 <- agricolae::cv.model(PTD_AUDPC_2) %>%
round(digits = 2)
CV_AUDPC_2
cld_AA1 <- cld(medias_PTD_AUDPC_1,
Letters = LETTERS)
cld_AA2 <- cld(medias_PTD_AUDPC_2,
Letters = LETTERS)
table_AA_1 <- cld_AA1 %>%
dplyr::select(TRATAMENTO, response, .group) %>%
dplyr::arrange(TRATAMENTO) %>%
mutate(response = round(response, 2))
table_AA_2 <- cld_AA2 %>%
dplyr::select(TRATAMENTO, emmean, .group)%>%
dplyr::arrange(TRATAMENTO) %>%
dplyr::mutate(TRATAMENTO = NULL) %>%
mutate(emmean = round(emmean, 2))
linha_CV <- c('CV',CV_AUDPC_1,' ',CV_AUDPC_2,' ')
combined_table_aa <- cbind(table_AA_1, table_AA_2)
combined_table_aa2 <- rbind(combined_table_aa, linha_CV)
colnames(combined_table_aa2) <- c('Tratamento', 'Média', 'Grupo', 'Média', 'Grupo')
opts <- options(knitr.kable.NA = "CV (%)")
knitr::kable(
combined_table_aa2,
align = "cccccc",
row.names=FALSE,
booktabs = TRUE, valign = 't') %>%
add_header_above(c(" " = 1, "Ensaio 1" = 2, "Ensaio 2" = 2)) %>%
add_header_above(c("Área Abaixo da Curva de Progresso da Doença" = 5))
