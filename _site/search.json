[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Projeto soja",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(drc)\n\nWarning: pacote 'drc' foi compilado no R versão 4.4.3\n\n\nCarregando pacotes exigidos: MASS\n\nAnexando pacote: 'MASS'\n\nO seguinte objeto é mascarado por 'package:dplyr':\n\n    select\n\n\n'drc' has been loaded.\n\nPlease cite R and 'drc' if used for a publication,\nfor references type 'citation()' and 'citation('drc')'.\n\n\nAnexando pacote: 'drc'\n\nOs seguintes objetos são mascarados por 'package:stats':\n\n    gaussian, getInitial\n\nlibrary(gsheet)\n\nWarning: pacote 'gsheet' foi compilado no R versão 4.4.3\n\nlibrary(kableExtra)\n\nWarning: pacote 'kableExtra' foi compilado no R versão 4.4.3\n\n\n\nAnexando pacote: 'kableExtra'\n\nO seguinte objeto é mascarado por 'package:dplyr':\n\n    group_rows\n\nlibrary(DT)\n\nWarning: pacote 'DT' foi compilado no R versão 4.4.3\n\nlibrary(leaflet)\n\nWarning: pacote 'leaflet' foi compilado no R versão 4.4.3\n\nlibrary(patchwork)\n\nWarning: pacote 'patchwork' foi compilado no R versão 4.4.3\n\n\n\nAnexando pacote: 'patchwork'\n\nO seguinte objeto é mascarado por 'package:MASS':\n\n    area\n\nlibrary(performance)\n\nWarning: pacote 'performance' foi compilado no R versão 4.4.3\n\nlibrary(emmeans)\n\nWelcome to emmeans.\nCaution: You lose important information if you filter this package's results.\nSee '? untidy'\n\nlibrary(DHARMa)\n\nWarning: pacote 'DHARMa' foi compilado no R versão 4.4.3\n\n\nThis is DHARMa 0.4.7. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n\nlibrary(multcomp)\n\nCarregando pacotes exigidos: mvtnorm\nCarregando pacotes exigidos: survival\nCarregando pacotes exigidos: TH.data\n\nAnexando pacote: 'TH.data'\n\nO seguinte objeto é mascarado por 'package:MASS':\n\n    geyser\n\nlibrary(epifitter)\n\nWarning: pacote 'epifitter' foi compilado no R versão 4.4.3\n\nlibrary(lme4)\n\nCarregando pacotes exigidos: Matrix\n\nAnexando pacote: 'Matrix'\n\nOs seguintes objetos são mascarados por 'package:tidyr':\n\n    expand, pack, unpack\n\nlibrary(agricolae)\nlibrary(qqplotr)\n\nWarning: pacote 'qqplotr' foi compilado no R versão 4.4.3\n\n\n\nAnexando pacote: 'qqplotr'\n\nOs seguintes objetos são mascarados por 'package:ggplot2':\n\n    stat_qq_line, StatQqLine\n\n\n\n\n\nleaflet() %&gt;%\n  addTiles() %&gt;% \n  setView(lng = -42.8497, lat = -20.7453, zoom = 16) %&gt;% \n  addMarkers(lng = -42.8497, lat = -20.7453, \n             popup = \"Localização do experimento\")\n\n\n\n\n\n\n\n\n\nGU &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1zEsVt_nnmydEUBJjkyMrOLHEu6pXeM-SmwTXyEoNbmg/edit?gid=0#gid=0\")\n\nGU &lt;- GU %&gt;% \n  mutate(\n    REPETICAO = as.factor(REPETICAO),\n    DOSE = as.numeric(DOSE)\n  )\n\nhead(GU) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nDOSE\nREPETICAO\nUREDOSPORO\nUREDOSPOROS_GERMINADOS\nTAXA_DE_GERMINAÇÃO\n\n\n\n\n0.0\n1\n146\n104\n71.23\n\n\n0.0\n2\n205\n137\n66.82\n\n\n0.0\n3\n67\n51\n76.11\n\n\n0.0\n4\n347\n241\n69.45\n\n\n2.5\n1\n252\n83\n32.93\n\n\n2.5\n2\n193\n45\n23.31\n\n\n\n\n\n\ncontrole &lt;- GU %&gt;% \n  filter(DOSE == 0) %&gt;% \n  summarise(mean_controle = mean(TAXA_DE_GERMINAÇÃO)) %&gt;% \n  pull()\n\nGU2 &lt;- GU %&gt;% \n  group_by(DOSE) %&gt;%\n  summarise(\n    mean_germ = mean(TAXA_DE_GERMINAÇÃO),\n    sd_germ = sd(TAXA_DE_GERMINAÇÃO),\n    n = n()\n  ) %&gt;% \n  mutate(\n    inib = ((controle - mean_germ)/controle)*100,\n    CI_lower = mean_germ - qt(0.975, df = n-1) * sd_germ/sqrt(n),\n    CI_upper = mean_germ + qt(0.975, df = n-1) * sd_germ/sqrt(n)\n  ) %&gt;% \n  round(digits = 2)\n\nhead(GU2) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nDOSE\nmean_germ\nsd_germ\nn\ninib\nCI_lower\nCI_upper\n\n\n\n\n0.00\n70.90\n3.92\n4\n0.00\n64.67\n77.13\n\n\n2.50\n26.93\n4.95\n4\n62.01\n19.06\n34.81\n\n\n3.75\n9.69\n4.44\n4\n86.34\n2.62\n16.76\n\n\n5.00\n6.08\n0.29\n4\n91.42\n5.62\n6.54\n\n\n7.50\n4.24\n1.07\n4\n94.02\n2.54\n5.95\n\n\n10.00\n3.64\n1.58\n4\n94.86\n1.13\n6.16\n\n\n\n\n\n\n\n\n\n\n\nEC &lt;- drm(\n  mean_germ ~ DOSE,\n  data = GU2,\n  fct = W1.4()\n)\n\nsummary(EC)\n\n\nModel fitted: Weibull (type 1) (4 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  1.991112   0.189631 10.4999 0.0089489 ** \nc:(Intercept)  4.237743   0.575215  7.3672 0.0179302 *  \nd:(Intercept) 70.910037   0.849463 83.4763 0.0001435 ***\ne:(Intercept)  2.402485   0.050044 48.0073 0.0004336 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 0.8496181 (2 degrees of freedom)\n\npar(mfrow = c(1, 2))\nplot(residuals(EC) ~ fitted(EC), main = \"Resíduos vs Ajustados\")\nabline(h = 0, col = \"red\")\nqqnorm(residuals(EC), main = \"Q-Q Plot dos Resíduos\")\nqqline(residuals(EC), col = \"red\")\n\n\n\n\n\n\n\nEC50_result &lt;- ED(EC, 50, interval = \"delta\")\n\n\nEstimated effective doses\n\n       Estimate Std. Error   Lower   Upper\ne:1:50  1.99856    0.06471 1.72014 2.27699\n\ncat(paste(\"EC50 =\", round(EC50_result[1], 2),\n          \"(\", round(EC50_result[3], 2), \"-\", round(EC50_result[4], 2), \")\"))\n\nEC50 = 2 ( 1.72 - 2.28 )\n\n\n\n\n\n\nplot_curva &lt;- ggplot(data = GU2, aes(x = DOSE)) +\n  geom_point(aes(y = mean_germ), size = 3) +\n  geom_errorbar(aes(ymin = CI_lower, ymax = CI_upper), width = 0.2) +\n  geom_line(aes(y = fitted(EC)), color = \"blue\") +\n  geom_hline(yintercept = 50, linetype = \"dashed\", color = \"red\") +\n  annotate(\"text\", \n           x = max(GU2$DOSE), \n           y = 55,\n           label = paste0(\"EC50 = \", round(EC50_result[1], 2), \n                          \" (\", round(EC50_result[3], 2), \"-\", \n                          round(EC50_result[4], 2), \")\"), \n           hjust = 1, \n           color = \"red\") +\n  labs(x = expression(\"Dose (ml L\"^-1~\")\"), \n       y = \"Germinação média (%)\",\n       title = \"Curva Dose-Resposta\") +\n  theme_minimal()\n\nprint(plot_curva)\n\n\n\n\n\n\n\n\n\n\n\n\nPTD &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1zEsVt_nnmydEUBJjkyMrOLHEu6pXeM-SmwTXyEoNbmg/edit?gid=1680501439#gid=1680501439\")\n\nPTD &lt;- PTD %&gt;% \n  mutate(\n    SEVERIDADE = as.numeric(str_replace(SEVERIDADE, \",\", \".\")) / 100,\n    REPETIÇÃO = as.factor(REPETIÇÃO),\n    BLOCO = as.factor(BLOCO),\n    TRATAMENTO = as.factor(TRATAMENTO)\n  )\n\nniveis_tratamento &lt;- c(\"Control\", \"3 x F\", \"3 x IRStimulus\",\n                       \"F, IRStimulus, IRStimulus\", \n                       \"IRStimulus, F, IRStimulus\", \n                       \"IRStimulus+F, F,F\")\n\nlevels(PTD$TRATAMENTO) &lt;- niveis_tratamento\n\nPTD_2 &lt;- PTD %&gt;%\n  group_by(REPETIÇÃO, TRATAMENTO, DAE) %&gt;% \n  summarise(\n    sev_mean = mean(SEVERIDADE),\n    sev_sd = sd(SEVERIDADE),\n    n = n()\n  ) %&gt;%\n  mutate(\n    sev_CI_lower = sev_mean - qt(0.975, df = n-1) * sev_sd/sqrt(n),\n    sev_CI_upper = sev_mean + qt(0.975, df = n-1) * sev_sd/sqrt(n)\n  )\n\n`summarise()` has grouped output by 'REPETIÇÃO', 'TRATAMENTO'. You can override\nusing the `.groups` argument.\n\nhead(PTD_2) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nREPETIÇÃO\nTRATAMENTO\nDAE\nsev_mean\nsev_sd\nn\nsev_CI_lower\nsev_CI_upper\n\n\n\n\n1\nControl\n36\n0.001000\n0.0000000\n4\n0.0010000\n0.0010000\n\n\n1\nControl\n43\n0.007125\n0.0025617\n4\n0.0030487\n0.0112013\n\n\n1\nControl\n50\n0.016500\n0.0048990\n4\n0.0087046\n0.0242954\n\n\n1\nControl\n57\n0.025875\n0.0046256\n4\n0.0185147\n0.0332353\n\n\n1\nControl\n63\n0.034375\n0.0065749\n4\n0.0239129\n0.0448371\n\n\n1\nControl\n70\n0.193750\n0.0379418\n4\n0.1333761\n0.2541239\n\n\n\n\n\n\n\n\n\n\n\nPTD_3 &lt;- PTD %&gt;%\n  group_by(REPETIÇÃO, TRATAMENTO, BLOCO) %&gt;% \n  summarise(\n    audpc = AUDPC(DAE, SEVERIDADE),\n    .groups = 'drop'\n  ) %&gt;% \n  mutate(\n    REPETIÇÃO = as.factor(REPETIÇÃO),\n    TRATAMENTO = as.factor(TRATAMENTO),\n    BLOCO = as.factor(BLOCO)\n  )\n\nhead(PTD_3) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nREPETIÇÃO\nTRATAMENTO\nBLOCO\naudpc\n\n\n\n\n1\nControl\n1\n12.6970\n\n\n1\nControl\n2\n14.1700\n\n\n1\nControl\n3\n12.6475\n\n\n1\nControl\n4\n13.7575\n\n\n1\n3 x F\n1\n4.0025\n\n\n1\n3 x F\n2\n3.6260\n\n\n\n\n\n\n\n\n\n\n\nmodelo_interacao &lt;- lm(audpc ~ TRATAMENTO * REPETIÇÃO + BLOCO,\n                       data = PTD_3)\n\nanova_interacao &lt;- anova(modelo_interacao)\nkable(anova_interacao) %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nTRATAMENTO\n5\n514.23090\n102.8461808\n235.120043\n0.00e+00\n\n\nREPETIÇÃO\n1\n28.11184\n28.1118414\n64.267407\n0.00e+00\n\n\nBLOCO\n3\n14.81787\n4.9392901\n11.291874\n2.97e-05\n\n\nTRATAMENTO:REPETIÇÃO\n5\n18.65931\n3.7318624\n8.531534\n2.88e-05\n\n\nResiduals\n33\n14.43486\n0.4374199\nNA\nNA\n\n\n\n\n\n\nif (anova_interacao[\"TRATAMENTO:REPETIÇÃO\", \"Pr(&gt;F)\"] &lt; 0.05) {\n  message(\"Interação significativa encontrada. Analisando experimentos separadamente.\")\n} else {\n  message(\"Nenhuma interação significativa. Pode-se analisar os dados combinados.\")\n}\n\nInteração significativa encontrada. Analisando experimentos separadamente.\n\n\n\n\n\n\nanalisar_experimento &lt;- function(dados_experimento, exp_id) {\n  \n  message(paste(\"\\nAnálise para o Experimento\", exp_id, \"\\n\"))\n  \n  modelo &lt;- lm(audpc ~ TRATAMENTO + BLOCO,\n               data = dados_experimento)\n  \n  cat(\"\\nVerificação de pressupostos:\\n\")\n  teste_normalidade &lt;- check_normality(modelo)\n  print(teste_normalidade)\n  \n  p_heteroced &lt;- check_heteroscedasticity(modelo)\n  cat(\"Teste de heterocedasticidade - p-value:\", p_heteroced, \"\\n\")\n  \n  par(mfrow = c(1, 2))\n  plot(residuals(modelo) ~ fitted(modelo), main = \"Resíduos vs Ajustados\")\n  abline(h = 0, col = \"red\")\n  qqnorm(residuals(modelo), main = \"Q-Q Plot dos Resíduos\")\n  qqline(residuals(modelo), col = \"red\")\n  par(mfrow = c(1, 1))\n  \n  if (p_heteroced &lt; 0.05) {\n    message(\"Heterocedasticidade detectada (p = \", round(p_heteroced, 3), \"). Aplicando transformação logarítmica.\")\n    modelo &lt;- lm(log(audpc) ~ TRATAMENTO + BLOCO,\n                 data = dados_experimento)\n    \n    cat(\"\\nVerificação após transformação:\\n\")\n    print(check_normality(modelo))\n    p_heteroced_pos &lt;- check_heteroscedasticity(modelo)\n    cat(\"Teste de heterocedasticidade após transformação - p-value:\", p_heteroced_pos, \"\\n\")\n  }\n  \n  cat(\"\\nTabela ANOVA:\\n\")\n  anova_result &lt;- anova(modelo)\n  print(anova_result)\n  \n  medias &lt;- emmeans(modelo, ~ TRATAMENTO, type = \"response\")\n  \n  cld_result &lt;- cld(medias,\n                    Letters = letters,\n                    adjust = \"tukey\")\n  \n  cv &lt;- agricolae::cv.model(modelo) %&gt;% round(2)\n  \n  list(\n    modelo = modelo,\n    anova = anova_result,\n    medias = medias,\n    cld = cld_result,\n    cv = cv\n  )\n}\n\nresultados_exp1 &lt;- analisar_experimento(filter(PTD_3, REPETIÇÃO == 1), 1)\n\n\nAnálise para o Experimento 1 \n\n\n\nVerificação de pressupostos:\nOK: residuals appear as normally distributed (p = 0.290).\nTeste de heterocedasticidade - p-value: 0.01269094 \n\n\n\n\n\n\n\n\n\nHeterocedasticidade detectada (p = 0.013). Aplicando transformação logarítmica.\n\n\n\nVerificação após transformação:\nOK: residuals appear as normally distributed (p = 0.083).\nTeste de heterocedasticidade após transformação - p-value: 0.587577 \n\nTabela ANOVA:\nAnalysis of Variance Table\n\nResponse: log(audpc)\n           Df Sum Sq Mean Sq F value    Pr(&gt;F)    \nTRATAMENTO  5 6.5872 1.31745 52.3843 5.755e-09 ***\nBLOCO       3 0.3937 0.13124  5.2185   0.01147 *  \nResiduals  15 0.3772 0.02515                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNote: adjust = \"tukey\" was changed to \"sidak\"\nbecause \"tukey\" is only appropriate for one set of pairwise comparisons\n\nresultados_exp2 &lt;- analisar_experimento(filter(PTD_3, REPETIÇÃO == 2), 2)\n\n\nAnálise para o Experimento 2 \n\n\n\nVerificação de pressupostos:\nOK: residuals appear as normally distributed (p = 0.573).\nTeste de heterocedasticidade - p-value: 0.1901227 \n\n\n\n\n\n\n\n\n\n\nTabela ANOVA:\nAnalysis of Variance Table\n\nResponse: audpc\n           Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \nTRATAMENTO  5 212.505  42.501  453.72 8.244e-16 ***\nBLOCO       3   6.447   2.149   22.94 7.396e-06 ***\nResiduals  15   1.405   0.094                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNote: adjust = \"tukey\" was changed to \"sidak\"\nbecause \"tukey\" is only appropriate for one set of pairwise comparisons\n\n\n\n\n\n\nextrair_dados_cld &lt;- function(cld_obj) {\n  df &lt;- as.data.frame(cld_obj)\n  \n  tratamento &lt;- if (\"TRATAMENTO\" %in% names(df)) {\n    as.character(df$TRATAMENTO)\n  } else if (\"treatment\" %in% names(df)) {\n    as.character(df$treatment)\n  } else if (\"trt\" %in% names(df)) {\n    as.character(df$trt)\n  } else {\n    as.character(rownames(df))\n  }\n  \n  response &lt;- if (\"response\" %in% names(df)) {\n    df$response\n  } else if (\"emmean\" %in% names(df)) {\n    df$emmean\n  } else if (\"prob\" %in% names(df)) {\n    df$prob\n  } else {\n    rep(NA, nrow(df))\n  }\n  \n  group &lt;- if (\".group\" %in% names(df)) {\n    df$.group\n  } else if (\"group\" %in% names(df)) {\n    df$group\n  } else {\n    rep(\"\", nrow(df))\n  }\n  \n  data.frame(\n    TRATAMENTO = tratamento,\n    response = as.numeric(response),\n    .group = as.character(group),\n    stringsAsFactors = FALSE\n  )\n}\n\ncriar_tabela_final &lt;- function() {\n  dados_exp1 &lt;- extrair_dados_cld(resultados_exp1$cld) %&gt;% \n    mutate(Experimento = \"1\",\n           response = round(response, 2))\n  \n  dados_exp2 &lt;- extrair_dados_cld(resultados_exp2$cld) %&gt;% \n    mutate(Experimento = \"2\",\n           response = round(response, 2))\n  \n  tabela &lt;- bind_rows(dados_exp1, dados_exp2) %&gt;% \n    pivot_wider(\n      names_from = Experimento,\n      values_from = c(response, .group),\n      names_glue = \"Exp_{Experimento}_{.value}\"\n    )\n  \n  linha_cv &lt;- data.frame(\n    TRATAMENTO = \"CV (%)\",\n    Exp_1_response = resultados_exp1$cv,\n    Exp_2_response = resultados_exp2$cv,\n    Exp_1_.group = \"\",\n    Exp_2_.group = \"\",\n    stringsAsFactors = FALSE\n  )\n  \n  names(linha_cv) &lt;- names(tabela)\n  \n  tabela_final &lt;- bind_rows(tabela, linha_cv)\n  \n  colnames(tabela_final) &lt;- c(\"Tratamento\", \n                              \"AACPD Exp 1\", \"Grupo Exp 1\", \n                              \"AACPD Exp 2\", \"Grupo Exp 2\")\n  \n  return(tabela_final)\n}\n\ntabela_final &lt;- criar_tabela_final()\n\nkable(tabela_final, align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE) %&gt;% \n  add_header_above(c(\" \" = 1, \"Experimento 1\" = 2, \"Experimento 2\" = 2)) %&gt;% \n  row_spec(nrow(tabela_final), bold = TRUE) %&gt;% \n  footnote(general = \"Médias seguidas pela mesma letra não diferem entre si pelo teste de Tukey (p &lt; 0.05)\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nExperimento 1\n\n\nExperimento 2\n\n\n\nTratamento\nAACPD Exp 1\nGrupo Exp 1\nAACPD Exp 2\nGrupo Exp 2\n\n\n\n\nIRStimulus+F, F,F\n3.12\n1.74\na\na\n\n\n3 x F\n3.44\n2.11\na\nab\n\n\nIRStimulus, F, IRStimulus\n3.67\n2.88\na\nc\n\n\nF, IRStimulus, IRStimulus\n3.97\n2.60\na\nbc\n\n\n3 x IRStimulus\n7.63\n7.84\nb\nd\n\n\nControl\n13.30\n9.24\nc\ne\n\n\nCV (%)\n9.84\n6.95\n\n\n\n\n\nNote: \n\n\n\n\n\n\n Médias seguidas pela mesma letra não diferem entre si pelo teste de Tukey (p &lt; 0.05)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(PTD_3, aes(x = TRATAMENTO, y = audpc, fill = REPETIÇÃO)) +\n  geom_boxplot(alpha = 0.7) +\n  stat_summary(\n    fun = mean, geom = \"point\", \n    shape = 18, size = 3, color = \"red\",\n    position = position_dodge(width = 0.75)\n  ) +\n  labs(\n    x = \"Tratamentos\",\n    y = \"Área Abaixo da Curva de Progresso da Doença (AACPD)\",\n    fill = \"Experimento\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  ) +\n  scale_fill_manual(\n    values = c(\"#1f78b4\", \"#33a02c\"),\n    labels = c(\"Experimento 1\", \"Experimento 2\")\n  )\n\n\n\n\n\n\n\nggplot(PTD_2, aes(x = DAE, y = sev_mean, color = TRATAMENTO)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(\n    aes(ymin = sev_CI_lower, ymax = sev_CI_upper),\n    width = 0.5\n  ) +\n  facet_wrap(~REPETIÇÃO, \n             labeller = labeller(\n               REPETIÇÃO = c(\"1\" = \"Experimento 1\", \"2\" = \"Experimento 2\")\n             )) +\n  labs(\n    x = \"Dias Após a Inoculação (DAI)\",\n    y = \"Severidade da Doença (Proporção)\",\n    color = \"Tratamento\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = \"bottom\",\n    strip.text = element_text(face = \"bold\", size = 12)\n  ) +\n  scale_color_brewer(palette = \"Set1\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "index.html#carregamento-dos-pacotes",
    "href": "index.html#carregamento-dos-pacotes",
    "title": "Projeto soja",
    "section": "",
    "text": "library(knitr)\nlibrary(ggplot2)\nlibrary(gsheet)\n\nWarning: pacote 'gsheet' foi compilado no R versão 4.4.3\n\nlibrary(ggthemes)\n\nWarning: pacote 'ggthemes' foi compilado no R versão 4.4.3\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(drc)\n\nWarning: pacote 'drc' foi compilado no R versão 4.4.3\n\n\nCarregando pacotes exigidos: MASS\n\nAnexando pacote: 'MASS'\n\nO seguinte objeto é mascarado por 'package:dplyr':\n\n    select\n\n\n'drc' has been loaded.\n\nPlease cite R and 'drc' if used for a publication,\nfor references type 'citation()' and 'citation('drc')'.\n\n\nAnexando pacote: 'drc'\n\nOs seguintes objetos são mascarados por 'package:stats':\n\n    gaussian, getInitial\n\nlibrary(kableExtra)\n\nWarning: pacote 'kableExtra' foi compilado no R versão 4.4.3\n\n\n\nAnexando pacote: 'kableExtra'\n\nO seguinte objeto é mascarado por 'package:dplyr':\n\n    group_rows\n\nlibrary(DT)\n\nWarning: pacote 'DT' foi compilado no R versão 4.4.3\n\nlibrary(leaflet)\n\nWarning: pacote 'leaflet' foi compilado no R versão 4.4.3"
  },
  {
    "objectID": "index.html#localização-dos-experimentos",
    "href": "index.html#localização-dos-experimentos",
    "title": "Projeto soja",
    "section": "",
    "text": "leaflet() %&gt;%\n  addTiles() %&gt;% \n  setView(lng = -42.8497, lat = -20.7453, zoom = 16) %&gt;% \n  addMarkers(lng = -42.8497, lat = -20.7453, \n             popup = \"Localização do experimento\")"
  },
  {
    "objectID": "index.html#importação-os-dados---germinação-de-uredósporos-gu",
    "href": "index.html#importação-os-dados---germinação-de-uredósporos-gu",
    "title": "Projeto soja",
    "section": "Importação os dados - Germinação de Uredósporos (GU)",
    "text": "Importação os dados - Germinação de Uredósporos (GU)\nOs dados utilizados nesta análise serão importados de uma planilha google sheet. Após importação, algumas colunas de dados serão transformados para fatores. O intuito é facilitar o desenvolvimento das análises.\n\nGU &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1zEsVt_nnmydEUBJjkyMrOLHEu6pXeM-SmwTXyEoNbmg/edit?gid=0#gid=0\")\n\nGU &lt;- GU %&gt;% \n  mutate(REPETICAO = as.factor(REPETICAO))\n\nhead(GU)\n\n# A tibble: 6 × 5\n   DOSE REPETICAO UREDOSPORO UREDOSPOROS_GERMINADOS TAXA_DE_GERMINAÇÃO\n  &lt;dbl&gt; &lt;fct&gt;          &lt;dbl&gt;                  &lt;dbl&gt;              &lt;dbl&gt;\n1   0   1                146                    104               71.2\n2   0   2                205                    137               66.8\n3   0   3                 67                     51               76.1\n4   0   4                347                    241               69.4\n5   2.5 1                252                     83               32.9\n6   2.5 2                193                     45               23.3"
  },
  {
    "objectID": "index.html#cálculo-da-germinação-média",
    "href": "index.html#cálculo-da-germinação-média",
    "title": "Projeto soja",
    "section": "Cálculo da Germinação Média",
    "text": "Cálculo da Germinação Média\n\nGU2 &lt;- GU %&gt;% \n  group_by(DOSE) %&gt;%\n  summarise(mean_germ = mean(TAXA_DE_GERMINAÇÃO))%&gt;% \n  dplyr::mutate(inib = ((70.90-mean_germ)/70.90)*100) %&gt;% \n  round(digits = 2)\n\nhead(GU2)\n\n# A tibble: 6 × 3\n   DOSE mean_germ  inib\n  &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1  0        70.9    0  \n2  2.5      26.9   62.0\n3  3.75      9.69  86.3\n4  5         6.08  91.4\n5  7.5       4.24  94.0\n6 10         3.64  94.9"
  },
  {
    "objectID": "index.html#modelagem-da-ec50-modelo-não-linear",
    "href": "index.html#modelagem-da-ec50-modelo-não-linear",
    "title": "Projeto soja",
    "section": "Modelagem da EC50 (modelo não-linear)",
    "text": "Modelagem da EC50 (modelo não-linear)\nPara calcular a dose do produto que é capaz de inibir 50% da germinação dos uredósporos do patógeno faremos uso da função drm (pacote drc) modelando para em Log-logistico W1.4.\n\nEC &lt;- drm(mean_germ ~ DOSE,\n                 data = GU2,\n                 fct = W1.4())\nsummary(EC)\n\n\nModel fitted: Weibull (type 1) (4 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  1.991112   0.189631 10.4999 0.0089489 ** \nc:(Intercept)  4.237743   0.575215  7.3672 0.0179302 *  \nd:(Intercept) 70.910037   0.849463 83.4763 0.0001435 ***\ne:(Intercept)  2.402485   0.050044 48.0073 0.0004336 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 0.8496181 (2 degrees of freedom)\n\n\n\nEC \n\n\nA 'drc' model.\n\nCall:\ndrm(formula = mean_germ ~ DOSE, data = GU2, fct = W1.4())\n\nCoefficients:\nb:(Intercept)  c:(Intercept)  d:(Intercept)  e:(Intercept)  \n        1.991          4.238         70.910          2.402  \n\n\n\nAIC(EC)\n\n[1] 18.47997"
  },
  {
    "objectID": "index.html#cálculo-da-ec50",
    "href": "index.html#cálculo-da-ec50",
    "title": "Projeto soja",
    "section": "Cálculo da EC50",
    "text": "Cálculo da EC50\n\nED(EC, 50, interval = \"delta\")\n\n\nEstimated effective doses\n\n       Estimate Std. Error   Lower   Upper\ne:1:50  1.99856    0.06471 1.72014 2.27699\n\n\nCom base no modelo gerado anteriormente e na função ED, foi possível estimar que a dose do produto suficiente para inibir 50% da inibição dos uredósporos é de 1.99."
  },
  {
    "objectID": "index.html#tabela-de-resultados",
    "href": "index.html#tabela-de-resultados",
    "title": "Projeto soja",
    "section": "Tabela de Resultados",
    "text": "Tabela de Resultados\n\ncolnames(GU2) = c('Dose', \"Germinação Média (%)\", \"Inibição da Germinação (%)\")\n\nkable(GU2,\n      align = \"ccc\")\n\n\n\n\nDose\nGerminação Média (%)\nInibição da Germinação (%)\n\n\n\n\n0.00\n70.90\n0.00\n\n\n2.50\n26.93\n62.01\n\n\n3.75\n9.69\n86.34\n\n\n5.00\n6.08\n91.42\n\n\n7.50\n4.24\n94.02\n\n\n10.00\n3.64\n94.86"
  },
  {
    "objectID": "index.html#gráfico-de-dose-germinação",
    "href": "index.html#gráfico-de-dose-germinação",
    "title": "Projeto soja",
    "section": "Gráfico de Dose ✕ Germinação",
    "text": "Gráfico de Dose ✕ Germinação\n\nplot(EC,\n     xlab = Dose~(ml~L^-1),\n     ylab = \"Germinação média (%)\",\n     xt = c(\"0\", \"2.50\", \"3.75\", \"5\", \"7.5\", \"10\"),\n     ylim = c(0,100),\n     pch = 19,     \n     col = \"grey20\")"
  },
  {
    "objectID": "index.html#carregamento-dos-pacotes-1",
    "href": "index.html#carregamento-dos-pacotes-1",
    "title": "Projeto soja",
    "section": "Carregamento dos pacotes",
    "text": "Carregamento dos pacotes\n\nlibrary(gsheet) \nlibrary(tidyverse) \nlibrary(DT) \nlibrary(patchwork) \n\nWarning: pacote 'patchwork' foi compilado no R versão 4.4.3\n\n\n\nAnexando pacote: 'patchwork'\n\n\nO seguinte objeto é mascarado por 'package:MASS':\n\n    area\n\nlibrary(performance) \n\nWarning: pacote 'performance' foi compilado no R versão 4.4.3\n\nlibrary(emmeans)\n\nWelcome to emmeans.\nCaution: You lose important information if you filter this package's results.\nSee '? untidy'\n\nlibrary(DHARMa)\n\nWarning: pacote 'DHARMa' foi compilado no R versão 4.4.3\n\n\nThis is DHARMa 0.4.7. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n\nlibrary(multcomp) \n\nCarregando pacotes exigidos: mvtnorm\n\n\nCarregando pacotes exigidos: survival\n\n\nCarregando pacotes exigidos: TH.data\n\n\n\nAnexando pacote: 'TH.data'\n\n\nO seguinte objeto é mascarado por 'package:MASS':\n\n    geyser\n\nlibrary(multcompView) \nlibrary(epifitter)\n\nWarning: pacote 'epifitter' foi compilado no R versão 4.4.3\n\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(ggplot2)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#projeto-soja",
    "href": "index.html#projeto-soja",
    "title": "Projeto soja",
    "section": "",
    "text": "#############################################################\n##                 CARREGAMENTO DE PACOTES                 ##\n#############################################################\n\n# Pacotes essenciais para análise e visualização\nlibrary(tidyverse)   # Inclui ggplot2, dplyr, tidyr, etc. para manipulação e visualização de dados\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(drc)         # Para modelos de dose-resposta\n\nWarning: pacote 'drc' foi compilado no R versão 4.4.3\n\n\nCarregando pacotes exigidos: MASS\n\nAnexando pacote: 'MASS'\n\nO seguinte objeto é mascarado por 'package:dplyr':\n\n    select\n\n\n'drc' has been loaded.\n\nPlease cite R and 'drc' if used for a publication,\nfor references type 'citation()' and 'citation('drc')'.\n\n\nAnexando pacote: 'drc'\n\nOs seguintes objetos são mascarados por 'package:stats':\n\n    gaussian, getInitial\n\nlibrary(gsheet)      # Para importar dados do Google Sheets\n\nWarning: pacote 'gsheet' foi compilado no R versão 4.4.3\n\nlibrary(kableExtra)  # Para tabelas formatadas\n\nWarning: pacote 'kableExtra' foi compilado no R versão 4.4.3\n\n\n\nAnexando pacote: 'kableExtra'\n\nO seguinte objeto é mascarado por 'package:dplyr':\n\n    group_rows\n\nlibrary(DT)          # Para tabelas interativas\n\nWarning: pacote 'DT' foi compilado no R versão 4.4.3\n\nlibrary(leaflet)     # Para mapas interativos\n\nWarning: pacote 'leaflet' foi compilado no R versão 4.4.3\n\nlibrary(patchwork)   # Para combinar gráficos\n\nWarning: pacote 'patchwork' foi compilado no R versão 4.4.3\n\n\n\nAnexando pacote: 'patchwork'\n\nO seguinte objeto é mascarado por 'package:MASS':\n\n    area\n\nlibrary(performance) # Para verificação de pressupostos dos modelos\n\nWarning: pacote 'performance' foi compilado no R versão 4.4.3\n\nlibrary(emmeans)     # Para comparações de médias\n\nWelcome to emmeans.\nCaution: You lose important information if you filter this package's results.\nSee '? untidy'\n\nlibrary(DHARMa)      # Para diagnósticos de modelos\n\nWarning: pacote 'DHARMa' foi compilado no R versão 4.4.3\n\n\nThis is DHARMa 0.4.7. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n\nlibrary(multcomp)    # Para comparações múltiplas\n\nCarregando pacotes exigidos: mvtnorm\nCarregando pacotes exigidos: survival\nCarregando pacotes exigidos: TH.data\n\nAnexando pacote: 'TH.data'\n\nO seguinte objeto é mascarado por 'package:MASS':\n\n    geyser\n\nlibrary(epifitter)   # Para análises epidemiológicas\n\nWarning: pacote 'epifitter' foi compilado no R versão 4.4.3\n\nlibrary(lme4)        # Para modelos de efeitos mistos (opcional)\n\nCarregando pacotes exigidos: Matrix\n\nAnexando pacote: 'Matrix'\n\nOs seguintes objetos são mascarados por 'package:tidyr':\n\n    expand, pack, unpack\n\nlibrary(agricolae)# Para cálculo do CV\nlibrary(qqplotr)\n\nWarning: pacote 'qqplotr' foi compilado no R versão 4.4.3\n\n\n\nAnexando pacote: 'qqplotr'\n\nOs seguintes objetos são mascarados por 'package:ggplot2':\n\n    stat_qq_line, StatQqLine\n\n#############################################################\n##               LOCALIZAÇÃO DOS EXPERIMENTOS              ##\n#############################################################\n\n# Criar mapa interativo mostrando a localização do experimento\nleaflet() %&gt;%\n  addTiles() %&gt;% \n  setView(lng = -42.8497, lat = -20.7453, zoom = 16) %&gt;% \n  addMarkers(lng = -42.8497, lat = -20.7453, \n             popup = \"Localização do experimento\")\n\n\n\n\n#############################################################\n##       ANÁLISE DE GERMINAÇÃO DE UREDÓSPOROS (GU)        ##\n#############################################################\n\n# Importar dados do Google Sheets\nGU &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1zEsVt_nnmydEUBJjkyMrOLHEu6pXeM-SmwTXyEoNbmg/edit?gid=0#gid=0\")\n\n# Converter variáveis para o tipo adequado\nGU &lt;- GU %&gt;% \n  mutate(\n    REPETICAO = as.factor(REPETICAO),  # Converter repetição para fator\n    DOSE = as.numeric(DOSE)            # Garantir que dose é numérica\n  )\n\n# Visualizar as primeiras linhas dos dados\nhead(GU) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nDOSE\nREPETICAO\nUREDOSPORO\nUREDOSPOROS_GERMINADOS\nTAXA_DE_GERMINAÇÃO\n\n\n\n\n0.0\n1\n146\n104\n71.23\n\n\n0.0\n2\n205\n137\n66.82\n\n\n0.0\n3\n67\n51\n76.11\n\n\n0.0\n4\n347\n241\n69.45\n\n\n2.5\n1\n252\n83\n32.93\n\n\n2.5\n2\n193\n45\n23.31\n\n\n\n\n\n\n# Calcular germinação média e inibição por dose\n# Usando a média do controle (dose 0) como referência\ncontrole &lt;- GU %&gt;% \n  filter(DOSE == 0) %&gt;% \n  summarise(mean_controle = mean(TAXA_DE_GERMINAÇÃO)) %&gt;% \n  pull()\n\nGU2 &lt;- GU %&gt;% \n  group_by(DOSE) %&gt;%\n  summarise(\n    mean_germ = mean(TAXA_DE_GERMINAÇÃO),  # Média da germinação por dose\n    sd_germ = sd(TAXA_DE_GERMINAÇÃO),      # Desvio padrão\n    n = n()                                # Número de observações\n  ) %&gt;% \n  mutate(\n    inib = ((controle - mean_germ)/controle)*100,  # Cálculo da inibição\n    # Intervalo de confiança 95% para a média\n    CI_lower = mean_germ - qt(0.975, df = n-1) * sd_germ/sqrt(n),\n    CI_upper = mean_germ + qt(0.975, df = n-1) * sd_germ/sqrt(n)\n  ) %&gt;% \n  round(digits = 2)\n\n# Visualizar resultados\nhead(GU2) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nDOSE\nmean_germ\nsd_germ\nn\ninib\nCI_lower\nCI_upper\n\n\n\n\n0.00\n70.90\n3.92\n4\n0.00\n64.67\n77.13\n\n\n2.50\n26.93\n4.95\n4\n62.01\n19.06\n34.81\n\n\n3.75\n9.69\n4.44\n4\n86.34\n2.62\n16.76\n\n\n5.00\n6.08\n0.29\n4\n91.42\n5.62\n6.54\n\n\n7.50\n4.24\n1.07\n4\n94.02\n2.54\n5.95\n\n\n10.00\n3.64\n1.58\n4\n94.86\n1.13\n6.16\n\n\n\n\n\n\n#############################################################\n##              MODELAGEM DA CURVA DOSE-RESPOSTA           ##\n#############################################################\n\n# Ajustar modelo log-logístico para curva dose-resposta\nEC &lt;- drm(\n  mean_germ ~ DOSE,\n  data = GU2,\n  fct = W1.4()  # Função log-logística com 4 parâmetros\n)\n\n# Verificar ajuste do modelo\nsummary(EC)\n\n\nModel fitted: Weibull (type 1) (4 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  1.991112   0.189631 10.4999 0.0089489 ** \nc:(Intercept)  4.237743   0.575215  7.3672 0.0179302 *  \nd:(Intercept) 70.910037   0.849463 83.4763 0.0001435 ***\ne:(Intercept)  2.402485   0.050044 48.0073 0.0004336 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 0.8496181 (2 degrees of freedom)\n\n# Diagnóstico do modelo - gráfico de resíduos\npar(mfrow = c(1, 2))\nplot(residuals(EC) ~ fitted(EC), main = \"Resíduos vs Ajustados\")\nabline(h = 0, col = \"red\")\nqqnorm(residuals(EC), main = \"Q-Q Plot dos Resíduos\")\nqqline(residuals(EC), col = \"red\")\n\n\n\n\n\n\n\n# Calcular EC50 com intervalo de confiança\nEC50_result &lt;- ED(EC, 50, interval = \"delta\")\n\n\nEstimated effective doses\n\n       Estimate Std. Error   Lower   Upper\ne:1:50  1.99856    0.06471 1.72014 2.27699\n\ncat(paste(\"EC50 =\", round(EC50_result[1], 2),\n    \"(\", round(EC50_result[3], 2), \"-\", round(EC50_result[4], 2), \")\"))\n\nEC50 = 2 ( 1.72 - 2.28 )\n\n#############################################################\n##               VISUALIZAÇÃO DA CURVA DOSE-RESPOSTA       ##\n#############################################################\n# Gráfico da curva dose-resposta usando ggplot2\nplot_curva &lt;- ggplot(data = GU2, aes(x = DOSE)) +\n  geom_point(aes(y = mean_germ), size = 3) +\n  geom_errorbar(aes(ymin = CI_lower, ymax = CI_upper), width = 0.2) +\n  geom_line(aes(y = fitted(EC)), color = \"blue\") +\n  geom_hline(yintercept = 50, linetype = \"dashed\", color = \"red\") +\n  annotate(\"text\", \n           x = max(GU2$DOSE), \n           y = 55,\n           label = paste0(\"EC50 = \", round(EC50_result[1], 2), \n                         \" (\", round(EC50_result[3], 2), \"-\", \n                         round(EC50_result[4], 2), \")\"), \n           hjust = 1, \n           color = \"red\") +\n  labs(x = expression(\"Dose (ml L\"^-1~\")\"), \n       y = \"Germinação média (%)\",\n       title = \"Curva Dose-Resposta\") +\n  theme_minimal()\n\nprint(plot_curva)\n\n\n\n\n\n\n\n#############################################################\n##         ÁREA ABAIXO DA CURVA DE PROGRESSO DA DOENÇA     ##\n#############################################################\n\n# Importar dados de progresso temporal da doença\nPTD &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1zEsVt_nnmydEUBJjkyMrOLHEu6pXeM-SmwTXyEoNbmg/edit?gid=1680501439#gid=1680501439\")\n\n# Processamento inicial dos dados\nPTD &lt;- PTD %&gt;% \n  mutate(\n    # Converter vírgula para ponto e transformar em proporção (0-1)\n    SEVERIDADE = as.numeric(str_replace(SEVERIDADE, \",\", \".\")) / 100,\n    # Converter variáveis para fatores\n    REPETIÇÃO = as.factor(REPETIÇÃO),\n    BLOCO = as.factor(BLOCO),\n    TRATAMENTO = as.factor(TRATAMENTO)\n  )\n\n# Definir nomes descritivos para os tratamentos\nniveis_tratamento &lt;- c(\"Control\", \"3 x F\", \"3 x IRStimulus\",\n                       \"F, IRStimulus, IRStimulus\", \n                       \"IRStimulus, F, IRStimulus\", \n                       \"IRStimulus+F, F,F\")\n\nlevels(PTD$TRATAMENTO) &lt;- niveis_tratamento\n\n# Calcular severidade média por repetição, tratamento e tempo\nPTD_2 &lt;- PTD %&gt;%\n  group_by(REPETIÇÃO, TRATAMENTO, DAE) %&gt;% \n  summarise(\n    sev_mean = mean(SEVERIDADE),\n    sev_sd = sd(SEVERIDADE),\n    n = n()\n  ) %&gt;%\n  mutate(\n    sev_CI_lower = sev_mean - qt(0.975, df = n-1) * sev_sd/sqrt(n),\n    sev_CI_upper = sev_mean + qt(0.975, df = n-1) * sev_sd/sqrt(n)\n  )\n\n`summarise()` has grouped output by 'REPETIÇÃO', 'TRATAMENTO'. You can override\nusing the `.groups` argument.\n\n# Visualizar estrutura dos dados processados\nhead(PTD_2) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nREPETIÇÃO\nTRATAMENTO\nDAE\nsev_mean\nsev_sd\nn\nsev_CI_lower\nsev_CI_upper\n\n\n\n\n1\nControl\n36\n0.001000\n0.0000000\n4\n0.0010000\n0.0010000\n\n\n1\nControl\n43\n0.007125\n0.0025617\n4\n0.0030487\n0.0112013\n\n\n1\nControl\n50\n0.016500\n0.0048990\n4\n0.0087046\n0.0242954\n\n\n1\nControl\n57\n0.025875\n0.0046256\n4\n0.0185147\n0.0332353\n\n\n1\nControl\n63\n0.034375\n0.0065749\n4\n0.0239129\n0.0448371\n\n\n1\nControl\n70\n0.193750\n0.0379418\n4\n0.1333761\n0.2541239\n\n\n\n\n\n\n#############################################################\n##       CÁLCULO DA ÁREA ABAIXO DA CURVA (AACPD)          ##\n#############################################################\n\n# Calcular AACPD para cada combinação de repetição, tratamento e bloco\nPTD_3 &lt;- PTD %&gt;%\n  group_by(REPETIÇÃO, TRATAMENTO, BLOCO) %&gt;% \n  summarise(\n    audpc = AUDPC(DAE, SEVERIDADE),  # Cálculo da AACPD\n    .groups = 'drop'\n  ) %&gt;% \n  mutate(\n    REPETIÇÃO = as.factor(REPETIÇÃO),\n    TRATAMENTO = as.factor(TRATAMENTO),\n    BLOCO = as.factor(BLOCO)\n  )\n\n# Visualizar resultados do cálculo da AACPD\nhead(PTD_3) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nREPETIÇÃO\nTRATAMENTO\nBLOCO\naudpc\n\n\n\n\n1\nControl\n1\n12.6970\n\n\n1\nControl\n2\n14.1700\n\n\n1\nControl\n3\n12.6475\n\n\n1\nControl\n4\n13.7575\n\n\n1\n3 x F\n1\n4.0025\n\n\n1\n3 x F\n2\n3.6260\n\n\n\n\n\n\n#############################################################\n##         VERIFICAÇÃO DA INTERAÇÃO ENTRE EXPERIMENTOS     ##\n#############################################################\n\n# Modelo para verificar interação entre tratamento e experimento\nmodelo_interacao &lt;- lm(audpc ~ TRATAMENTO * REPETIÇÃO + BLOCO,\n                      data = PTD_3)\n\n# ANOVA para avaliar significância da interação\nanova_interacao &lt;- anova(modelo_interacao)\nkable(anova_interacao) %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nTRATAMENTO\n5\n514.23090\n102.8461808\n235.120043\n0.00e+00\n\n\nREPETIÇÃO\n1\n28.11184\n28.1118414\n64.267407\n0.00e+00\n\n\nBLOCO\n3\n14.81787\n4.9392901\n11.291874\n2.97e-05\n\n\nTRATAMENTO:REPETIÇÃO\n5\n18.65931\n3.7318624\n8.531534\n2.88e-05\n\n\nResiduals\n33\n14.43486\n0.4374199\nNA\nNA\n\n\n\n\n\n\n# Decisão: Analisar experimentos separadamente devido à interação significativa\nif (anova_interacao[\"TRATAMENTO:REPETIÇÃO\", \"Pr(&gt;F)\"] &lt; 0.05) {\n  message(\"Interação significativa encontrada. Analisando experimentos separadamente.\")\n} else {\n  message(\"Nenhuma interação significativa. Pode-se analisar os dados combinados.\")\n}\n\nInteração significativa encontrada. Analisando experimentos separadamente.\n\n#############################################################\n##         ANÁLISE INDIVIDUAL PARA CADA EXPERIMENTO       ##\n#############################################################\n\n# Função para análise de um experimento específico\nanalisar_experimento &lt;- function(dados_experimento, exp_id) {\n  \n  message(paste(\"\\nAnálise para o Experimento\", exp_id, \"\\n\"))\n  \n  # Modelo linear inicial\n  modelo &lt;- lm(audpc ~ TRATAMENTO + BLOCO,\n               data = dados_experimento)\n  \n  # Verificação de pressupostos\n  cat(\"\\nVerificação de pressupostos:\\n\")\n  teste_normalidade &lt;- check_normality(modelo)\n  print(teste_normalidade)\n  \n  # Modificação principal aqui: armazenar o p-value diretamente\n  p_heteroced &lt;- check_heteroscedasticity(modelo)\n  cat(\"Teste de heterocedasticidade - p-value:\", p_heteroced, \"\\n\")\n  \n  # Plot de diagnósticos\n  par(mfrow = c(1, 2))\n  plot(residuals(modelo) ~ fitted(modelo), main = \"Resíduos vs Ajustados\")\n  abline(h = 0, col = \"red\")\n  qqnorm(residuals(modelo), main = \"Q-Q Plot dos Resíduos\")\n  qqline(residuals(modelo), col = \"red\")\n  par(mfrow = c(1, 1))\n  \n  # Transformação se necessário (testar logarítmica)\n  if (p_heteroced &lt; 0.05) {\n    message(\"Heterocedasticidade detectada (p = \", round(p_heteroced, 3), \"). Aplicando transformação logarítmica.\")\n    modelo &lt;- lm(log(audpc) ~ TRATAMENTO + BLOCO,\n                 data = dados_experimento)\n    \n    # Verificar pressupostos após transformação\n    cat(\"\\nVerificação após transformação:\\n\")\n    print(check_normality(modelo))\n    p_heteroced_pos &lt;- check_heteroscedasticity(modelo)\n    cat(\"Teste de heterocedasticidade após transformação - p-value:\", p_heteroced_pos, \"\\n\")\n  }\n  \n  # ANOVA\n  cat(\"\\nTabela ANOVA:\\n\")\n  anova_result &lt;- anova(modelo)\n  print(anova_result)\n  \n  # Comparação de médias (usando emmeans)\n  medias &lt;- emmeans(modelo, ~ TRATAMENTO, type = \"response\")\n  \n  # Letras de significância\n  cld_result &lt;- cld(medias,\n                    Letters = letters,\n                    adjust = \"tukey\")\n  \n  # Calcular CV\n  cv &lt;- agricolae::cv.model(modelo) %&gt;% round(2)\n  \n  # Retornar resultados\n  list(\n    modelo = modelo,\n    anova = anova_result,\n    medias = medias,\n    cld = cld_result,\n    cv = cv\n  )\n}\n\n# Aplicar análise para cada experimento\nresultados_exp1 &lt;- analisar_experimento(filter(PTD_3, REPETIÇÃO == 1), 1)\n\n\nAnálise para o Experimento 1 \n\n\n\nVerificação de pressupostos:\nOK: residuals appear as normally distributed (p = 0.290).\nTeste de heterocedasticidade - p-value: 0.01269094 \n\n\n\n\n\n\n\n\n\nHeterocedasticidade detectada (p = 0.013). Aplicando transformação logarítmica.\n\n\n\nVerificação após transformação:\nOK: residuals appear as normally distributed (p = 0.083).\nTeste de heterocedasticidade após transformação - p-value: 0.587577 \n\nTabela ANOVA:\nAnalysis of Variance Table\n\nResponse: log(audpc)\n           Df Sum Sq Mean Sq F value    Pr(&gt;F)    \nTRATAMENTO  5 6.5872 1.31745 52.3843 5.755e-09 ***\nBLOCO       3 0.3937 0.13124  5.2185   0.01147 *  \nResiduals  15 0.3772 0.02515                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNote: adjust = \"tukey\" was changed to \"sidak\"\nbecause \"tukey\" is only appropriate for one set of pairwise comparisons\n\nresultados_exp2 &lt;- analisar_experimento(filter(PTD_3, REPETIÇÃO == 2), 2)\n\n\nAnálise para o Experimento 2 \n\n\n\nVerificação de pressupostos:\nOK: residuals appear as normally distributed (p = 0.573).\nTeste de heterocedasticidade - p-value: 0.1901227 \n\n\n\n\n\n\n\n\n\n\nTabela ANOVA:\nAnalysis of Variance Table\n\nResponse: audpc\n           Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \nTRATAMENTO  5 212.505  42.501  453.72 8.244e-16 ***\nBLOCO       3   6.447   2.149   22.94 7.396e-06 ***\nResiduals  15   1.405   0.094                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNote: adjust = \"tukey\" was changed to \"sidak\"\nbecause \"tukey\" is only appropriate for one set of pairwise comparisons\n\n#############################################################\n##              TABELA RESUMO DOS RESULTADOS               ##\n#############################################################\n\n# Função alternativa completamente nova para extrair dados do cld\nextrair_dados_cld &lt;- function(cld_obj) {\n  # Converter para dataframe básico\n  df &lt;- as.data.frame(cld_obj)\n  \n  # Verificar e extrair as colunas necessárias com diferentes nomes possíveis\n  tratamento &lt;- if (\"TRATAMENTO\" %in% names(df)) {\n    as.character(df$TRATAMENTO)\n  } else if (\"treatment\" %in% names(df)) {\n    as.character(df$treatment)\n  } else if (\"trt\" %in% names(df)) {\n    as.character(df$trt)\n  } else {\n    as.character(rownames(df))\n  }\n  \n  response &lt;- if (\"response\" %in% names(df)) {\n    df$response\n  } else if (\"emmean\" %in% names(df)) {\n    df$emmean\n  } else if (\"prob\" %in% names(df)) {\n    df$prob\n  } else {\n    rep(NA, nrow(df))\n  }\n  \n  group &lt;- if (\".group\" %in% names(df)) {\n    df$.group\n  } else if (\"group\" %in% names(df)) {\n    df$group\n  } else {\n    rep(\"\", nrow(df))\n  }\n  \n  # Criar dataframe diretamente sem usar select\n  data.frame(\n    TRATAMENTO = tratamento,\n    response = as.numeric(response),\n    .group = as.character(group),\n    stringsAsFactors = FALSE\n  )\n}\n\n# Criar tabela resumo sem usar select()\ncriar_tabela_final &lt;- function() {\n  # Extrair dados dos experimentos\n  dados_exp1 &lt;- extrair_dados_cld(resultados_exp1$cld) %&gt;% \n    mutate(Experimento = \"1\",\n           response = round(response, 2))\n  \n  dados_exp2 &lt;- extrair_dados_cld(resultados_exp2$cld) %&gt;% \n    mutate(Experimento = \"2\",\n           response = round(response, 2))\n  \n  # Combinar e transformar os dados\n  tabela &lt;- bind_rows(dados_exp1, dados_exp2) %&gt;% \n    pivot_wider(\n      names_from = Experimento,\n      values_from = c(response, .group),\n      names_glue = \"Exp_{Experimento}_{.value}\"\n    )\n  \n  # Adicionar CVs como uma nova linha\n  linha_cv &lt;- data.frame(\n    TRATAMENTO = \"CV (%)\",\n    Exp_1_response = resultados_exp1$cv,\n    Exp_2_response = resultados_exp2$cv,\n    Exp_1_.group = \"\",\n    Exp_2_.group = \"\",\n    stringsAsFactors = FALSE\n  )\n  \n  names(linha_cv) &lt;- names(tabela) # Garantir mesmos nomes de colunas\n  \n  # Juntar tudo\n  tabela_final &lt;- bind_rows(tabela, linha_cv)\n  \n  # Renomear colunas manualmente\n  colnames(tabela_final) &lt;- c(\"Tratamento\", \n                             \"AACPD Exp 1\", \"Grupo Exp 1\", \n                             \"AACPD Exp 2\", \"Grupo Exp 2\")\n  \n  return(tabela_final)\n}\n\n# Gerar a tabela final\ntabela_final &lt;- criar_tabela_final()\n\n# Exibir tabela formatada\nkable(tabela_final, align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE) %&gt;% \n  add_header_above(c(\" \" = 1, \"Experimento 1\" = 2, \"Experimento 2\" = 2)) %&gt;% \n  row_spec(nrow(tabela_final), bold = TRUE) %&gt;% \n  footnote(general = \"Médias seguidas pela mesma letra não diferem entre si pelo teste de Tukey (p &lt; 0.05)\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nExperimento 1\n\n\nExperimento 2\n\n\n\nTratamento\nAACPD Exp 1\nGrupo Exp 1\nAACPD Exp 2\nGrupo Exp 2\n\n\n\n\nIRStimulus+F, F,F\n3.12\n1.74\na\na\n\n\n3 x F\n3.44\n2.11\na\nab\n\n\nIRStimulus, F, IRStimulus\n3.67\n2.88\na\nc\n\n\nF, IRStimulus, IRStimulus\n3.97\n2.60\na\nbc\n\n\n3 x IRStimulus\n7.63\n7.84\nb\nd\n\n\nControl\n13.30\n9.24\nc\ne\n\n\nCV (%)\n9.84\n6.95\n\n\n\n\n\nNote: \n\n\n\n\n\n\n Médias seguidas pela mesma letra não diferem entre si pelo teste de Tukey (p &lt; 0.05)\n\n\n\n\n\n\n\n\n\n\n\n#############################################################\n##               VISUALIZAÇÃO GRÁFICA DOS RESULTADOS       ##\n#############################################################\n\n# Gráfico de AACPD por tratamento e experimento\nggplot(PTD_3, aes(x = TRATAMENTO, y = audpc, fill = REPETIÇÃO)) +\n  geom_boxplot(alpha = 0.7) +\n  stat_summary(\n    fun = mean, geom = \"point\", \n    shape = 18, size = 3, color = \"red\",\n    position = position_dodge(width = 0.75)\n  ) +\n  labs(\n    x = \"Tratamentos\",\n    y = \"Área Abaixo da Curva de Progresso da Doença (AACPD)\",\n    fill = \"Experimento\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  ) +\n  scale_fill_manual(\n    values = c(\"#1f78b4\", \"#33a02c\"),\n    labels = c(\"Experimento 1\", \"Experimento 2\")\n  )\n\n\n\n\n\n\n\n# Gráfico de progresso da doença ao longo do tempo\nggplot(PTD_2, aes(x = DAE, y = sev_mean, color = TRATAMENTO)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(\n    aes(ymin = sev_CI_lower, ymax = sev_CI_upper),\n    width = 0.5\n  ) +\n  facet_wrap(~REPETIÇÃO, \n             labeller = labeller(\n               REPETIÇÃO = c(\"1\" = \"Experimento 1\", \"2\" = \"Experimento 2\")\n             )) +\n  labs(\n    x = \"Dias Após a Inoculação (DAI)\",\n    y = \"Severidade da Doença (Proporção)\",\n    color = \"Tratamento\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = \"bottom\",\n    strip.text = element_text(face = \"bold\", size = 12)\n  ) +\n  scale_color_brewer(palette = \"Set1\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "index.html#análise-de-germinação-de-uredósporos-gu",
    "href": "index.html#análise-de-germinação-de-uredósporos-gu",
    "title": "Projeto soja",
    "section": "",
    "text": "GU &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1zEsVt_nnmydEUBJjkyMrOLHEu6pXeM-SmwTXyEoNbmg/edit?gid=0#gid=0\")\n\nGU &lt;- GU %&gt;% \n  mutate(\n    REPETICAO = as.factor(REPETICAO),\n    DOSE = as.numeric(DOSE)\n  )\n\nhead(GU) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nDOSE\nREPETICAO\nUREDOSPORO\nUREDOSPOROS_GERMINADOS\nTAXA_DE_GERMINAÇÃO\n\n\n\n\n0.0\n1\n146\n104\n71.23\n\n\n0.0\n2\n205\n137\n66.82\n\n\n0.0\n3\n67\n51\n76.11\n\n\n0.0\n4\n347\n241\n69.45\n\n\n2.5\n1\n252\n83\n32.93\n\n\n2.5\n2\n193\n45\n23.31\n\n\n\n\n\n\ncontrole &lt;- GU %&gt;% \n  filter(DOSE == 0) %&gt;% \n  summarise(mean_controle = mean(TAXA_DE_GERMINAÇÃO)) %&gt;% \n  pull()\n\nGU2 &lt;- GU %&gt;% \n  group_by(DOSE) %&gt;%\n  summarise(\n    mean_germ = mean(TAXA_DE_GERMINAÇÃO),\n    sd_germ = sd(TAXA_DE_GERMINAÇÃO),\n    n = n()\n  ) %&gt;% \n  mutate(\n    inib = ((controle - mean_germ)/controle)*100,\n    CI_lower = mean_germ - qt(0.975, df = n-1) * sd_germ/sqrt(n),\n    CI_upper = mean_germ + qt(0.975, df = n-1) * sd_germ/sqrt(n)\n  ) %&gt;% \n  round(digits = 2)\n\nhead(GU2) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nDOSE\nmean_germ\nsd_germ\nn\ninib\nCI_lower\nCI_upper\n\n\n\n\n0.00\n70.90\n3.92\n4\n0.00\n64.67\n77.13\n\n\n2.50\n26.93\n4.95\n4\n62.01\n19.06\n34.81\n\n\n3.75\n9.69\n4.44\n4\n86.34\n2.62\n16.76\n\n\n5.00\n6.08\n0.29\n4\n91.42\n5.62\n6.54\n\n\n7.50\n4.24\n1.07\n4\n94.02\n2.54\n5.95\n\n\n10.00\n3.64\n1.58\n4\n94.86\n1.13\n6.16"
  },
  {
    "objectID": "index.html#modelagem-da-curva-dose-resposta",
    "href": "index.html#modelagem-da-curva-dose-resposta",
    "title": "Projeto soja",
    "section": "",
    "text": "EC &lt;- drm(\n  mean_germ ~ DOSE,\n  data = GU2,\n  fct = W1.4()\n)\n\nsummary(EC)\n\n\nModel fitted: Weibull (type 1) (4 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  1.991112   0.189631 10.4999 0.0089489 ** \nc:(Intercept)  4.237743   0.575215  7.3672 0.0179302 *  \nd:(Intercept) 70.910037   0.849463 83.4763 0.0001435 ***\ne:(Intercept)  2.402485   0.050044 48.0073 0.0004336 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 0.8496181 (2 degrees of freedom)\n\npar(mfrow = c(1, 2))\nplot(residuals(EC) ~ fitted(EC), main = \"Resíduos vs Ajustados\")\nabline(h = 0, col = \"red\")\nqqnorm(residuals(EC), main = \"Q-Q Plot dos Resíduos\")\nqqline(residuals(EC), col = \"red\")\n\n\n\n\n\n\n\nEC50_result &lt;- ED(EC, 50, interval = \"delta\")\n\n\nEstimated effective doses\n\n       Estimate Std. Error   Lower   Upper\ne:1:50  1.99856    0.06471 1.72014 2.27699\n\ncat(paste(\"EC50 =\", round(EC50_result[1], 2),\n          \"(\", round(EC50_result[3], 2), \"-\", round(EC50_result[4], 2), \")\"))\n\nEC50 = 2 ( 1.72 - 2.28 )"
  },
  {
    "objectID": "index.html#visualização-da-curva-dose-resposta",
    "href": "index.html#visualização-da-curva-dose-resposta",
    "title": "Projeto soja",
    "section": "",
    "text": "plot_curva &lt;- ggplot(data = GU2, aes(x = DOSE)) +\n  geom_point(aes(y = mean_germ), size = 3) +\n  geom_errorbar(aes(ymin = CI_lower, ymax = CI_upper), width = 0.2) +\n  geom_line(aes(y = fitted(EC)), color = \"blue\") +\n  geom_hline(yintercept = 50, linetype = \"dashed\", color = \"red\") +\n  annotate(\"text\", \n           x = max(GU2$DOSE), \n           y = 55,\n           label = paste0(\"EC50 = \", round(EC50_result[1], 2), \n                          \" (\", round(EC50_result[3], 2), \"-\", \n                          round(EC50_result[4], 2), \")\"), \n           hjust = 1, \n           color = \"red\") +\n  labs(x = expression(\"Dose (ml L\"^-1~\")\"), \n       y = \"Germinação média (%)\",\n       title = \"Curva Dose-Resposta\") +\n  theme_minimal()\n\nprint(plot_curva)"
  },
  {
    "objectID": "index.html#cálculo-da-área-abaixo-da-curva-aacpd",
    "href": "index.html#cálculo-da-área-abaixo-da-curva-aacpd",
    "title": "Projeto soja",
    "section": "",
    "text": "PTD &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1zEsVt_nnmydEUBJjkyMrOLHEu6pXeM-SmwTXyEoNbmg/edit?gid=1680501439#gid=1680501439\")\n\nPTD &lt;- PTD %&gt;% \n  mutate(\n    SEVERIDADE = as.numeric(str_replace(SEVERIDADE, \",\", \".\")) / 100,\n    REPETIÇÃO = as.factor(REPETIÇÃO),\n    BLOCO = as.factor(BLOCO),\n    TRATAMENTO = as.factor(TRATAMENTO)\n  )\n\nniveis_tratamento &lt;- c(\"Control\", \"3 x F\", \"3 x IRStimulus\",\n                       \"F, IRStimulus, IRStimulus\", \n                       \"IRStimulus, F, IRStimulus\", \n                       \"IRStimulus+F, F,F\")\n\nlevels(PTD$TRATAMENTO) &lt;- niveis_tratamento\n\nPTD_2 &lt;- PTD %&gt;%\n  group_by(REPETIÇÃO, TRATAMENTO, DAE) %&gt;% \n  summarise(\n    sev_mean = mean(SEVERIDADE),\n    sev_sd = sd(SEVERIDADE),\n    n = n()\n  ) %&gt;%\n  mutate(\n    sev_CI_lower = sev_mean - qt(0.975, df = n-1) * sev_sd/sqrt(n),\n    sev_CI_upper = sev_mean + qt(0.975, df = n-1) * sev_sd/sqrt(n)\n  )\n\n`summarise()` has grouped output by 'REPETIÇÃO', 'TRATAMENTO'. You can override\nusing the `.groups` argument.\n\nhead(PTD_2) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nREPETIÇÃO\nTRATAMENTO\nDAE\nsev_mean\nsev_sd\nn\nsev_CI_lower\nsev_CI_upper\n\n\n\n\n1\nControl\n36\n0.001000\n0.0000000\n4\n0.0010000\n0.0010000\n\n\n1\nControl\n43\n0.007125\n0.0025617\n4\n0.0030487\n0.0112013\n\n\n1\nControl\n50\n0.016500\n0.0048990\n4\n0.0087046\n0.0242954\n\n\n1\nControl\n57\n0.025875\n0.0046256\n4\n0.0185147\n0.0332353\n\n\n1\nControl\n63\n0.034375\n0.0065749\n4\n0.0239129\n0.0448371\n\n\n1\nControl\n70\n0.193750\n0.0379418\n4\n0.1333761\n0.2541239"
  },
  {
    "objectID": "index.html#verificação-da-interação-entre-experimentos",
    "href": "index.html#verificação-da-interação-entre-experimentos",
    "title": "Projeto soja",
    "section": "",
    "text": "PTD_3 &lt;- PTD %&gt;%\n  group_by(REPETIÇÃO, TRATAMENTO, BLOCO) %&gt;% \n  summarise(\n    audpc = AUDPC(DAE, SEVERIDADE),\n    .groups = 'drop'\n  ) %&gt;% \n  mutate(\n    REPETIÇÃO = as.factor(REPETIÇÃO),\n    TRATAMENTO = as.factor(TRATAMENTO),\n    BLOCO = as.factor(BLOCO)\n  )\n\nhead(PTD_3) %&gt;% \n  kable(align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\nREPETIÇÃO\nTRATAMENTO\nBLOCO\naudpc\n\n\n\n\n1\nControl\n1\n12.6970\n\n\n1\nControl\n2\n14.1700\n\n\n1\nControl\n3\n12.6475\n\n\n1\nControl\n4\n13.7575\n\n\n1\n3 x F\n1\n4.0025\n\n\n1\n3 x F\n2\n3.6260"
  },
  {
    "objectID": "index.html#verificação-da-interação-entre-experimentos-1",
    "href": "index.html#verificação-da-interação-entre-experimentos-1",
    "title": "Projeto soja",
    "section": "",
    "text": "modelo_interacao &lt;- lm(audpc ~ TRATAMENTO * REPETIÇÃO + BLOCO,\n                       data = PTD_3)\n\nanova_interacao &lt;- anova(modelo_interacao)\nkable(anova_interacao) %&gt;% \n  kable_styling(full_width = FALSE)\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nTRATAMENTO\n5\n514.23090\n102.8461808\n235.120043\n0.00e+00\n\n\nREPETIÇÃO\n1\n28.11184\n28.1118414\n64.267407\n0.00e+00\n\n\nBLOCO\n3\n14.81787\n4.9392901\n11.291874\n2.97e-05\n\n\nTRATAMENTO:REPETIÇÃO\n5\n18.65931\n3.7318624\n8.531534\n2.88e-05\n\n\nResiduals\n33\n14.43486\n0.4374199\nNA\nNA\n\n\n\n\n\n\nif (anova_interacao[\"TRATAMENTO:REPETIÇÃO\", \"Pr(&gt;F)\"] &lt; 0.05) {\n  message(\"Interação significativa encontrada. Analisando experimentos separadamente.\")\n} else {\n  message(\"Nenhuma interação significativa. Pode-se analisar os dados combinados.\")\n}\n\nInteração significativa encontrada. Analisando experimentos separadamente."
  },
  {
    "objectID": "index.html#análise-individual-para-cada-experimento",
    "href": "index.html#análise-individual-para-cada-experimento",
    "title": "Projeto soja",
    "section": "",
    "text": "analisar_experimento &lt;- function(dados_experimento, exp_id) {\n  \n  message(paste(\"\\nAnálise para o Experimento\", exp_id, \"\\n\"))\n  \n  modelo &lt;- lm(audpc ~ TRATAMENTO + BLOCO,\n               data = dados_experimento)\n  \n  cat(\"\\nVerificação de pressupostos:\\n\")\n  teste_normalidade &lt;- check_normality(modelo)\n  print(teste_normalidade)\n  \n  p_heteroced &lt;- check_heteroscedasticity(modelo)\n  cat(\"Teste de heterocedasticidade - p-value:\", p_heteroced, \"\\n\")\n  \n  par(mfrow = c(1, 2))\n  plot(residuals(modelo) ~ fitted(modelo), main = \"Resíduos vs Ajustados\")\n  abline(h = 0, col = \"red\")\n  qqnorm(residuals(modelo), main = \"Q-Q Plot dos Resíduos\")\n  qqline(residuals(modelo), col = \"red\")\n  par(mfrow = c(1, 1))\n  \n  if (p_heteroced &lt; 0.05) {\n    message(\"Heterocedasticidade detectada (p = \", round(p_heteroced, 3), \"). Aplicando transformação logarítmica.\")\n    modelo &lt;- lm(log(audpc) ~ TRATAMENTO + BLOCO,\n                 data = dados_experimento)\n    \n    cat(\"\\nVerificação após transformação:\\n\")\n    print(check_normality(modelo))\n    p_heteroced_pos &lt;- check_heteroscedasticity(modelo)\n    cat(\"Teste de heterocedasticidade após transformação - p-value:\", p_heteroced_pos, \"\\n\")\n  }\n  \n  cat(\"\\nTabela ANOVA:\\n\")\n  anova_result &lt;- anova(modelo)\n  print(anova_result)\n  \n  medias &lt;- emmeans(modelo, ~ TRATAMENTO, type = \"response\")\n  \n  cld_result &lt;- cld(medias,\n                    Letters = letters,\n                    adjust = \"tukey\")\n  \n  cv &lt;- agricolae::cv.model(modelo) %&gt;% round(2)\n  \n  list(\n    modelo = modelo,\n    anova = anova_result,\n    medias = medias,\n    cld = cld_result,\n    cv = cv\n  )\n}\n\nresultados_exp1 &lt;- analisar_experimento(filter(PTD_3, REPETIÇÃO == 1), 1)\n\n\nAnálise para o Experimento 1 \n\n\n\nVerificação de pressupostos:\nOK: residuals appear as normally distributed (p = 0.290).\nTeste de heterocedasticidade - p-value: 0.01269094 \n\n\n\n\n\n\n\n\n\nHeterocedasticidade detectada (p = 0.013). Aplicando transformação logarítmica.\n\n\n\nVerificação após transformação:\nOK: residuals appear as normally distributed (p = 0.083).\nTeste de heterocedasticidade após transformação - p-value: 0.587577 \n\nTabela ANOVA:\nAnalysis of Variance Table\n\nResponse: log(audpc)\n           Df Sum Sq Mean Sq F value    Pr(&gt;F)    \nTRATAMENTO  5 6.5872 1.31745 52.3843 5.755e-09 ***\nBLOCO       3 0.3937 0.13124  5.2185   0.01147 *  \nResiduals  15 0.3772 0.02515                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNote: adjust = \"tukey\" was changed to \"sidak\"\nbecause \"tukey\" is only appropriate for one set of pairwise comparisons\n\nresultados_exp2 &lt;- analisar_experimento(filter(PTD_3, REPETIÇÃO == 2), 2)\n\n\nAnálise para o Experimento 2 \n\n\n\nVerificação de pressupostos:\nOK: residuals appear as normally distributed (p = 0.573).\nTeste de heterocedasticidade - p-value: 0.1901227 \n\n\n\n\n\n\n\n\n\n\nTabela ANOVA:\nAnalysis of Variance Table\n\nResponse: audpc\n           Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \nTRATAMENTO  5 212.505  42.501  453.72 8.244e-16 ***\nBLOCO       3   6.447   2.149   22.94 7.396e-06 ***\nResiduals  15   1.405   0.094                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNote: adjust = \"tukey\" was changed to \"sidak\"\nbecause \"tukey\" is only appropriate for one set of pairwise comparisons"
  },
  {
    "objectID": "index.html#tabela-resumo-dos-resultados",
    "href": "index.html#tabela-resumo-dos-resultados",
    "title": "Projeto soja",
    "section": "",
    "text": "extrair_dados_cld &lt;- function(cld_obj) {\n  df &lt;- as.data.frame(cld_obj)\n  \n  tratamento &lt;- if (\"TRATAMENTO\" %in% names(df)) {\n    as.character(df$TRATAMENTO)\n  } else if (\"treatment\" %in% names(df)) {\n    as.character(df$treatment)\n  } else if (\"trt\" %in% names(df)) {\n    as.character(df$trt)\n  } else {\n    as.character(rownames(df))\n  }\n  \n  response &lt;- if (\"response\" %in% names(df)) {\n    df$response\n  } else if (\"emmean\" %in% names(df)) {\n    df$emmean\n  } else if (\"prob\" %in% names(df)) {\n    df$prob\n  } else {\n    rep(NA, nrow(df))\n  }\n  \n  group &lt;- if (\".group\" %in% names(df)) {\n    df$.group\n  } else if (\"group\" %in% names(df)) {\n    df$group\n  } else {\n    rep(\"\", nrow(df))\n  }\n  \n  data.frame(\n    TRATAMENTO = tratamento,\n    response = as.numeric(response),\n    .group = as.character(group),\n    stringsAsFactors = FALSE\n  )\n}\n\ncriar_tabela_final &lt;- function() {\n  dados_exp1 &lt;- extrair_dados_cld(resultados_exp1$cld) %&gt;% \n    mutate(Experimento = \"1\",\n           response = round(response, 2))\n  \n  dados_exp2 &lt;- extrair_dados_cld(resultados_exp2$cld) %&gt;% \n    mutate(Experimento = \"2\",\n           response = round(response, 2))\n  \n  tabela &lt;- bind_rows(dados_exp1, dados_exp2) %&gt;% \n    pivot_wider(\n      names_from = Experimento,\n      values_from = c(response, .group),\n      names_glue = \"Exp_{Experimento}_{.value}\"\n    )\n  \n  linha_cv &lt;- data.frame(\n    TRATAMENTO = \"CV (%)\",\n    Exp_1_response = resultados_exp1$cv,\n    Exp_2_response = resultados_exp2$cv,\n    Exp_1_.group = \"\",\n    Exp_2_.group = \"\",\n    stringsAsFactors = FALSE\n  )\n  \n  names(linha_cv) &lt;- names(tabela)\n  \n  tabela_final &lt;- bind_rows(tabela, linha_cv)\n  \n  colnames(tabela_final) &lt;- c(\"Tratamento\", \n                              \"AACPD Exp 1\", \"Grupo Exp 1\", \n                              \"AACPD Exp 2\", \"Grupo Exp 2\")\n  \n  return(tabela_final)\n}\n\ntabela_final &lt;- criar_tabela_final()\n\nkable(tabela_final, align = \"c\") %&gt;% \n  kable_styling(full_width = FALSE) %&gt;% \n  add_header_above(c(\" \" = 1, \"Experimento 1\" = 2, \"Experimento 2\" = 2)) %&gt;% \n  row_spec(nrow(tabela_final), bold = TRUE) %&gt;% \n  footnote(general = \"Médias seguidas pela mesma letra não diferem entre si pelo teste de Tukey (p &lt; 0.05)\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nExperimento 1\n\n\nExperimento 2\n\n\n\nTratamento\nAACPD Exp 1\nGrupo Exp 1\nAACPD Exp 2\nGrupo Exp 2\n\n\n\n\nIRStimulus+F, F,F\n3.12\n1.74\na\na\n\n\n3 x F\n3.44\n2.11\na\nab\n\n\nIRStimulus, F, IRStimulus\n3.67\n2.88\na\nc\n\n\nF, IRStimulus, IRStimulus\n3.97\n2.60\na\nbc\n\n\n3 x IRStimulus\n7.63\n7.84\nb\nd\n\n\nControl\n13.30\n9.24\nc\ne\n\n\nCV (%)\n9.84\n6.95\n\n\n\n\n\nNote: \n\n\n\n\n\n\n Médias seguidas pela mesma letra não diferem entre si pelo teste de Tukey (p &lt; 0.05)"
  },
  {
    "objectID": "index.html#visualização-gráfica-dos-resultados",
    "href": "index.html#visualização-gráfica-dos-resultados",
    "title": "Projeto soja",
    "section": "",
    "text": "ggplot(PTD_3, aes(x = TRATAMENTO, y = audpc, fill = REPETIÇÃO)) +\n  geom_boxplot(alpha = 0.7) +\n  stat_summary(\n    fun = mean, geom = \"point\", \n    shape = 18, size = 3, color = \"red\",\n    position = position_dodge(width = 0.75)\n  ) +\n  labs(\n    x = \"Tratamentos\",\n    y = \"Área Abaixo da Curva de Progresso da Doença (AACPD)\",\n    fill = \"Experimento\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  ) +\n  scale_fill_manual(\n    values = c(\"#1f78b4\", \"#33a02c\"),\n    labels = c(\"Experimento 1\", \"Experimento 2\")\n  )\n\n\n\n\n\n\n\nggplot(PTD_2, aes(x = DAE, y = sev_mean, color = TRATAMENTO)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(\n    aes(ymin = sev_CI_lower, ymax = sev_CI_upper),\n    width = 0.5\n  ) +\n  facet_wrap(~REPETIÇÃO, \n             labeller = labeller(\n               REPETIÇÃO = c(\"1\" = \"Experimento 1\", \"2\" = \"Experimento 2\")\n             )) +\n  labs(\n    x = \"Dias Após a Inoculação (DAI)\",\n    y = \"Severidade da Doença (Proporção)\",\n    color = \"Tratamento\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = \"bottom\",\n    strip.text = element_text(face = \"bold\", size = 12)\n  ) +\n  scale_color_brewer(palette = \"Set1\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  }
]